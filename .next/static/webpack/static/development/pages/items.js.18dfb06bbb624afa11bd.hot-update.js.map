{"version":3,"file":"static/webpack/static/development/pages/items.js.18dfb06bbb624afa11bd.hot-update.js","sources":["webpack:///./components/Item.js","webpack:///./lib/formatMoney.js"],"sourcesContent":["import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport Link from 'next/link';\nimport Title from './styles/Title';\nimport ItemStyles from './styles/ItemStyles';\nimport PriceTag from './styles/PriceTag';\nimport formatMoney from '../lib/formatMoney';\n\n\nexport default class Item extends Component {\n    static propTypes = {\n        item: PropTypes.object.isRequired,\n\n    };\n\n    render() {\n        const { item }= this.props;\n        return <ItemStyles>\n            <Title>\n                <Link \n                    href = {{\n                    pathname: '/item',\n                    query: { id: item.id }\n                }}>\n                    <a>{item.title}</a>\n                </Link>\n            </Title>\n            <PriceTag>\n                {formatMoney(item.price)}\n            </PriceTag>\n        </ItemStyles>\n    }\n}","export default function(amount) {\n  const options = {\n    style: 'currency',\n    currency: 'USD',\n    minimumFractionDigits: 2,\n  };\n  // if its a whole, dollar amount, leave off the .00\n  if (amount % 100 === 0) options.minimumFractionDigits = 0;\n  const formatter = new Intl.NumberFormat('en-US', options);\n  return formatter.format(amount / 100);\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;;;;;;;;;AAMA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAFA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;;;;AAtBA;AACA;AADA;AAEA;AADA;AACA;;;;;;;;;;;;;ACXA;AAAA;AACA;AACA;AACA;AACA;AAHA;AACA;AAKA;AACA;AACA;AACA;;;;A","sourceRoot":""}